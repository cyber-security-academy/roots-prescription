name: Build and deploy Docker app to Azure

on: 
  push:
    branches:
      - 'main'
      - 'add-deploy-workflow'  # just for testing the workflow works. Remove before merge.
  workflow_dispatch:  # To enable manual run of workflow

permissions:
  contents: read
  id-token: write

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# Set up the following secrets in your repository:
#   AZURE_CREDENTIALS, REGISTRY_USERNAME, REGISTRY_PASSWORD, REGISTRY_URL
# 2. Change these variables for your configuration:
env:
  GROUP: 0
  AZURE_WEBAPP_NAME: 'csa-gr$GROUP-app'  # set this to your application's name
  CONTAINER_REGISTRY: ${{ vars.REGISTRY_URL }}  # set repo variable with Container Registry URL, example : xyz.azurecr.io 
  IMAGE_NAME: '$CONTAINER_REGISTRY/csa-roots$GROUP'
  IMAGE_AND_TAG: '$IMAGE_NAME:${{ github.sha }}'
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Azure authentication
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: ACR authentication
      shell: bash
      run: |
        TOKEN=$(az acr login --name $CONTAINER_REGISTRY --expose-token --output tsv --query accessToken --only-show-errors)
        docker login $CONTAINER_REGISTRY --username ${{ vars.AZURE_CLIENT_ID }} --password $TOKEN

    - name: Docker Build & Push to ACR
      run: |
        docker build . -t $IMAGE_AND_TAG
        docker push $IMAGE_AND_TAG
        echo 'ðŸš€ Pushed image to ACR: $IMAGE_AND_TAG' >> $GITHUB_SUMMARY_STEP
# Uncomment the below action snippet if the Web app credentials are not updated as web app settings
#     - name: Set Web App ACR authentication
#       uses: Azure/appservice-settings@v1
#       with:
#         app-name: ${{ env.AZURE_WEBAPP_NAME }} 
#         app-settings-json: |
#           [
#               {
#                   "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
#                   "value": "${{ secrets.REGISTRY_PASSWORD }}",
#                   "slotSetting": false
#               },
#               {
#                   "name": "DOCKER_REGISTRY_SERVER_URL",
#                   "value": "https://${{ env.CONTAINER_REGISTRY }}",
#                   "slotSetting": false
#               },
#               {
#                   "name": "DOCKER_REGISTRY_SERVER_USERNAME",
#                   "value": "${{ secrets.REGISTRY_USERNAME  }}",
#                   "slotSetting": false
#               }
#           ]

    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        images: ${{ env.IMAGE_AND_TAG }} 
#         startup-command: 'npm start'    # Include start up command to start the app container

# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples

